// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: publicit/domain/files/file.proto

package files

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id is the unique identifier for a record in db
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ReferenceId is an identifier for any other struct
	ReferenceId string                 `protobuf:"bytes,2,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// Key is the unique identifier within S3 bucket for an object
	Key string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Filename is the original filename when uploaded to S3
	Filename string `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	// Size is the size in bytes
	Size int64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// User Id is a reference to a owner identifier.
	UserId string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Email is the email of the owner of the file.
	Email string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicit_domain_files_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_publicit_domain_files_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_publicit_domain_files_file_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *File) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *File) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *File) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type AmazonMetaFilename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XAmzMetaFilename string `protobuf:"bytes,1,opt,name=x_amz_meta_filename,json=xAmzMetaFilename,proto3" json:"x_amz_meta_filename,omitempty"`
}

func (x *AmazonMetaFilename) Reset() {
	*x = AmazonMetaFilename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicit_domain_files_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonMetaFilename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonMetaFilename) ProtoMessage() {}

func (x *AmazonMetaFilename) ProtoReflect() protoreflect.Message {
	mi := &file_publicit_domain_files_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonMetaFilename.ProtoReflect.Descriptor instead.
func (*AmazonMetaFilename) Descriptor() ([]byte, []int) {
	return file_publicit_domain_files_file_proto_rawDescGZIP(), []int{1}
}

func (x *AmazonMetaFilename) GetXAmzMetaFilename() string {
	if x != nil {
		return x.XAmzMetaFilename
	}
	return ""
}

type PresignedUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *AmazonMetaFilename `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Key    string              `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Uri    string              `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *PresignedUrl) Reset() {
	*x = PresignedUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicit_domain_files_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresignedUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresignedUrl) ProtoMessage() {}

func (x *PresignedUrl) ProtoReflect() protoreflect.Message {
	mi := &file_publicit_domain_files_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresignedUrl.ProtoReflect.Descriptor instead.
func (*PresignedUrl) Descriptor() ([]byte, []int) {
	return file_publicit_domain_files_file_proto_rawDescGZIP(), []int{2}
}

func (x *PresignedUrl) GetHeader() *AmazonMetaFilename {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PresignedUrl) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PresignedUrl) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type PresignedFileDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key is the file identifier in S3.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Uri is the presigned url that resolves downloading a file.
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *PresignedFileDownload) Reset() {
	*x = PresignedFileDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicit_domain_files_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresignedFileDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresignedFileDownload) ProtoMessage() {}

func (x *PresignedFileDownload) ProtoReflect() protoreflect.Message {
	mi := &file_publicit_domain_files_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresignedFileDownload.ProtoReflect.Descriptor instead.
func (*PresignedFileDownload) Descriptor() ([]byte, []int) {
	return file_publicit_domain_files_file_proto_rawDescGZIP(), []int{3}
}

func (x *PresignedFileDownload) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PresignedFileDownload) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

var File_publicit_domain_files_file_proto protoreflect.FileDescriptor

var file_publicit_domain_files_file_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x69, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x43, 0x0a, 0x12, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x78, 0x5f,
	0x61, 0x6d, 0x7a, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x78, 0x41, 0x6d, 0x7a, 0x4d, 0x65, 0x74,
	0x61, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x0c, 0x50, 0x72, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x48, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x3b, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x42, 0xfc, 0x01, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0xa2, 0x02, 0x04, 0x50, 0x50, 0x44, 0x46, 0xaa, 0x02, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0xca, 0x02, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x5c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0xe2, 0x02, 0x28, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5c,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x1f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x3a, 0x3a, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x3a, 0x3a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_publicit_domain_files_file_proto_rawDescOnce sync.Once
	file_publicit_domain_files_file_proto_rawDescData = file_publicit_domain_files_file_proto_rawDesc
)

func file_publicit_domain_files_file_proto_rawDescGZIP() []byte {
	file_publicit_domain_files_file_proto_rawDescOnce.Do(func() {
		file_publicit_domain_files_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_publicit_domain_files_file_proto_rawDescData)
	})
	return file_publicit_domain_files_file_proto_rawDescData
}

var file_publicit_domain_files_file_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_publicit_domain_files_file_proto_goTypes = []interface{}{
	(*File)(nil),                  // 0: protos.publicit.domain.files.File
	(*AmazonMetaFilename)(nil),    // 1: protos.publicit.domain.files.AmazonMetaFilename
	(*PresignedUrl)(nil),          // 2: protos.publicit.domain.files.PresignedUrl
	(*PresignedFileDownload)(nil), // 3: protos.publicit.domain.files.PresignedFileDownload
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_publicit_domain_files_file_proto_depIdxs = []int32{
	4, // 0: protos.publicit.domain.files.File.created:type_name -> google.protobuf.Timestamp
	1, // 1: protos.publicit.domain.files.PresignedUrl.header:type_name -> protos.publicit.domain.files.AmazonMetaFilename
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_publicit_domain_files_file_proto_init() }
func file_publicit_domain_files_file_proto_init() {
	if File_publicit_domain_files_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_publicit_domain_files_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicit_domain_files_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonMetaFilename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicit_domain_files_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresignedUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicit_domain_files_file_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresignedFileDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_publicit_domain_files_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_publicit_domain_files_file_proto_goTypes,
		DependencyIndexes: file_publicit_domain_files_file_proto_depIdxs,
		MessageInfos:      file_publicit_domain_files_file_proto_msgTypes,
	}.Build()
	File_publicit_domain_files_file_proto = out.File
	file_publicit_domain_files_file_proto_rawDesc = nil
	file_publicit_domain_files_file_proto_goTypes = nil
	file_publicit_domain_files_file_proto_depIdxs = nil
}
