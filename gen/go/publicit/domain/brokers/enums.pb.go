// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: publicit/domain/brokers/enums.proto

package brokers

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowType int32

const (
	WorkflowType_UNKNOWN_WORKFLOW_TYPE          WorkflowType = 0
	WorkflowType_LOCATION_START_IMPORT_WORKFLOW WorkflowType = 1
	WorkflowType_LOCATION_IMPORT_ROW_WORKFLOW   WorkflowType = 2
)

// Enum value maps for WorkflowType.
var (
	WorkflowType_name = map[int32]string{
		0: "UNKNOWN_WORKFLOW_TYPE",
		1: "LOCATION_START_IMPORT_WORKFLOW",
		2: "LOCATION_IMPORT_ROW_WORKFLOW",
	}
	WorkflowType_value = map[string]int32{
		"UNKNOWN_WORKFLOW_TYPE":          0,
		"LOCATION_START_IMPORT_WORKFLOW": 1,
		"LOCATION_IMPORT_ROW_WORKFLOW":   2,
	}
)

func (x WorkflowType) Enum() *WorkflowType {
	p := new(WorkflowType)
	*p = x
	return p
}

func (x WorkflowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowType) Descriptor() protoreflect.EnumDescriptor {
	return file_publicit_domain_brokers_enums_proto_enumTypes[0].Descriptor()
}

func (WorkflowType) Type() protoreflect.EnumType {
	return &file_publicit_domain_brokers_enums_proto_enumTypes[0]
}

func (x WorkflowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowType.Descriptor instead.
func (WorkflowType) EnumDescriptor() ([]byte, []int) {
	return file_publicit_domain_brokers_enums_proto_rawDescGZIP(), []int{0}
}

type ExchangeNames int32

const (
	ExchangeNames_UNKNOWN_EXCHANGE_NAME          ExchangeNames = 0
	ExchangeNames_LOCATION_START_IMPORT_EXCHANGE ExchangeNames = 1
	ExchangeNames_LOCATION_IMPORT_ROW_EXCHANGE   ExchangeNames = 2
)

// Enum value maps for ExchangeNames.
var (
	ExchangeNames_name = map[int32]string{
		0: "UNKNOWN_EXCHANGE_NAME",
		1: "LOCATION_START_IMPORT_EXCHANGE",
		2: "LOCATION_IMPORT_ROW_EXCHANGE",
	}
	ExchangeNames_value = map[string]int32{
		"UNKNOWN_EXCHANGE_NAME":          0,
		"LOCATION_START_IMPORT_EXCHANGE": 1,
		"LOCATION_IMPORT_ROW_EXCHANGE":   2,
	}
)

func (x ExchangeNames) Enum() *ExchangeNames {
	p := new(ExchangeNames)
	*p = x
	return p
}

func (x ExchangeNames) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeNames) Descriptor() protoreflect.EnumDescriptor {
	return file_publicit_domain_brokers_enums_proto_enumTypes[1].Descriptor()
}

func (ExchangeNames) Type() protoreflect.EnumType {
	return &file_publicit_domain_brokers_enums_proto_enumTypes[1]
}

func (x ExchangeNames) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeNames.Descriptor instead.
func (ExchangeNames) EnumDescriptor() ([]byte, []int) {
	return file_publicit_domain_brokers_enums_proto_rawDescGZIP(), []int{1}
}

type QueueKeys int32

const (
	QueueKeys_UNKNOWN_QUEUE_KEY         QueueKeys = 0
	QueueKeys_LOCATION_START_IMPORT_KEY QueueKeys = 1
	QueueKeys_LOCATION_IMPORT_ROW_KEY   QueueKeys = 2
)

// Enum value maps for QueueKeys.
var (
	QueueKeys_name = map[int32]string{
		0: "UNKNOWN_QUEUE_KEY",
		1: "LOCATION_START_IMPORT_KEY",
		2: "LOCATION_IMPORT_ROW_KEY",
	}
	QueueKeys_value = map[string]int32{
		"UNKNOWN_QUEUE_KEY":         0,
		"LOCATION_START_IMPORT_KEY": 1,
		"LOCATION_IMPORT_ROW_KEY":   2,
	}
)

func (x QueueKeys) Enum() *QueueKeys {
	p := new(QueueKeys)
	*p = x
	return p
}

func (x QueueKeys) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueKeys) Descriptor() protoreflect.EnumDescriptor {
	return file_publicit_domain_brokers_enums_proto_enumTypes[2].Descriptor()
}

func (QueueKeys) Type() protoreflect.EnumType {
	return &file_publicit_domain_brokers_enums_proto_enumTypes[2]
}

func (x QueueKeys) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueKeys.Descriptor instead.
func (QueueKeys) EnumDescriptor() ([]byte, []int) {
	return file_publicit_domain_brokers_enums_proto_rawDescGZIP(), []int{2}
}

type QueueNames int32

const (
	QueueNames_UNKNOWN_QUEUE_NAME         QueueNames = 0
	QueueNames_LOCATION_START_IMPORT_NAME QueueNames = 1
	QueueNames_LOCATION_IMPORT_ROW_NAME   QueueNames = 2
)

// Enum value maps for QueueNames.
var (
	QueueNames_name = map[int32]string{
		0: "UNKNOWN_QUEUE_NAME",
		1: "LOCATION_START_IMPORT_NAME",
		2: "LOCATION_IMPORT_ROW_NAME",
	}
	QueueNames_value = map[string]int32{
		"UNKNOWN_QUEUE_NAME":         0,
		"LOCATION_START_IMPORT_NAME": 1,
		"LOCATION_IMPORT_ROW_NAME":   2,
	}
)

func (x QueueNames) Enum() *QueueNames {
	p := new(QueueNames)
	*p = x
	return p
}

func (x QueueNames) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueNames) Descriptor() protoreflect.EnumDescriptor {
	return file_publicit_domain_brokers_enums_proto_enumTypes[3].Descriptor()
}

func (QueueNames) Type() protoreflect.EnumType {
	return &file_publicit_domain_brokers_enums_proto_enumTypes[3]
}

func (x QueueNames) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueNames.Descriptor instead.
func (QueueNames) EnumDescriptor() ([]byte, []int) {
	return file_publicit_domain_brokers_enums_proto_rawDescGZIP(), []int{3}
}

var File_publicit_domain_brokers_enums_proto protoreflect.FileDescriptor

var file_publicit_domain_brokers_enums_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x73, 0x2a, 0x6f, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00,
	0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c,
	0x4f, 0x57, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x4f, 0x52, 0x4b,
	0x46, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x2a, 0x70, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x4f, 0x57, 0x5f, 0x45, 0x58,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x2a, 0x5e, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x49,
	0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4c,
	0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52,
	0x4f, 0x57, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x2a, 0x62, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x1e,
	0x0a, 0x1a, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x1c,
	0x0a, 0x18, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x52, 0x4f, 0x57, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x42, 0x89, 0x02, 0x0a,
	0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x73, 0x42, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0xa2, 0x02,
	0x04, 0x50, 0x50, 0x44, 0x42, 0xaa, 0x02, 0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0xca, 0x02, 0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5c,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0xe2, 0x02, 0x2a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x5c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5c, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x21, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x3a, 0x3a, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x3a, 0x3a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x3a,
	0x3a, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_publicit_domain_brokers_enums_proto_rawDescOnce sync.Once
	file_publicit_domain_brokers_enums_proto_rawDescData = file_publicit_domain_brokers_enums_proto_rawDesc
)

func file_publicit_domain_brokers_enums_proto_rawDescGZIP() []byte {
	file_publicit_domain_brokers_enums_proto_rawDescOnce.Do(func() {
		file_publicit_domain_brokers_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_publicit_domain_brokers_enums_proto_rawDescData)
	})
	return file_publicit_domain_brokers_enums_proto_rawDescData
}

var file_publicit_domain_brokers_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_publicit_domain_brokers_enums_proto_goTypes = []interface{}{
	(WorkflowType)(0),  // 0: protos.publicit.domain.brokers.WorkflowType
	(ExchangeNames)(0), // 1: protos.publicit.domain.brokers.ExchangeNames
	(QueueKeys)(0),     // 2: protos.publicit.domain.brokers.QueueKeys
	(QueueNames)(0),    // 3: protos.publicit.domain.brokers.QueueNames
}
var file_publicit_domain_brokers_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_publicit_domain_brokers_enums_proto_init() }
func file_publicit_domain_brokers_enums_proto_init() {
	if File_publicit_domain_brokers_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_publicit_domain_brokers_enums_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_publicit_domain_brokers_enums_proto_goTypes,
		DependencyIndexes: file_publicit_domain_brokers_enums_proto_depIdxs,
		EnumInfos:         file_publicit_domain_brokers_enums_proto_enumTypes,
	}.Build()
	File_publicit_domain_brokers_enums_proto = out.File
	file_publicit_domain_brokers_enums_proto_rawDesc = nil
	file_publicit_domain_brokers_enums_proto_goTypes = nil
	file_publicit_domain_brokers_enums_proto_depIdxs = nil
}
